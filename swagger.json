{
  "openapi": "3.1.0",
  "info": {
    "title": "Task Fusion",
    "version": "1.3.6"
  },
  "schemes": ["http", "https"],
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [
    { "url": "https://taskfusion-service.onrender.com" },
    { "url": "http://127.0.0.1:3000" }
  ],

  "tags": [
    {
      "name": "Auth",
      "description": "Authentication and authorization endpoints"
    },
    {
      "name": "Users",
      "description": "Users endpoints"
    },
    {
      "name": "Reviews",
      "description": "Reviews endpoints"
    },
    {
      "name": "Tasks",
      "description": "Tasks endpoints"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",

        "parameters": [],
        "security": [{}],

        "requestBody": {
          "description": "Registration object",
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RegistrationRequest" }
            }
          }
        },

        "responses": {
          "201": {
            "description": "Registration success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse201"
                }
              }
            }
          },
          "400": {
            "description": "Registration validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse400"
                }
              }
            }
          },
          "409": {
            "description": "Registration conflict error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse409"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",

        "parameters": [],
        "security": [{}],

        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginRequest" }
            }
          }
        },

        "responses": {
          "200": {
            "description": "Login success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse200"
                }
              }
            }
          },
          "400": {
            "description": "Login validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse400"
                }
              }
            }
          },
          "401": {
            "description": "Login authorization error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse401"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "204": {
            "description": "Logout success response"
          },
          "401": {
            "description": "Logout unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/google": {
      "get": {
        "tags": ["Auth"],
        "summary": "Google authentication",
        "description": "It works with user registration and login. Does not return anything, after successful registration/login provides API information about the user, and embeds a token for authentication in the path for the frontend.\"Try it out\" button doesn't work for this endpoint."
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "Get current user data",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Get current user success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse200"
                }
              }
            }
          },
          "401": {
            "description": "Get current user unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/edit": {
      "patch": {
        "tags": ["Users"],
        "summary": "Change current user data",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "requestBody": {
          "description": "Edit object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": { "$ref": "#/components/schemas/EditUserRequest" }
            }
          }
        },

        "responses": {
          "200": {
            "description": "Edit user info success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditUserResponse200"
                }
              }
            }
          },
          "400": {
            "description": "Edit user info validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditUserResponse400"
                }
              }
            }
          },
          "401": {
            "description": "Edit user info unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/reviews": {
      "get": {
        "tags": ["Reviews"],
        "summary": "Get all reviews",

        "parameters": [],
        "security": [],

        "responses": {
          "200": {
            "description": "Get reviews success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetReviews200"
                }
              }
            }
          }
        }
      }
    },
    "/reviews/own": {
      "get": {
        "tags": ["Reviews"],
        "summary": "Get own review",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Get user review success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetReviewResponse200"
                }
              }
            }
          },
          "401": {
            "description": "Get user review unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Reviews"],
        "summary": "Add review",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "requestBody": {
          "description": "Review object",
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AddReviewRequest" }
            }
          }
        },

        "responses": {
          "201": {
            "description": "Add review success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddReviewResponse201"
                }
              }
            }
          },
          "400": {
            "description": "Add review validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddReviewResponse400"
                }
              }
            }
          },
          "401": {
            "description": "Add review unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "409": {
            "description": "Add review conflict error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddReviewResponse409"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Reviews"],
        "summary": "Update review",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "requestBody": {
          "description": "Review object",
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateReviewRequest" }
            }
          }
        },

        "responses": {
          "200": {
            "description": "Update review success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateReviewResponse200"
                }
              }
            }
          },
          "400": {
            "description": "Update review validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddReviewResponse400"
                }
              }
            }
          },
          "401": {
            "description": "Update review unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Reviews"],
        "summary": "Delete review",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Delete review success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteReviewResponse200"
                }
              }
            }
          },
          "401": {
            "description": "Delete review unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get tasks for month",

        "parameters": [
          {
            "in": "query",
            "name": "year",
            "schema": { "type": "string" },
            "example": "2023",
            "required": true
          },
          {
            "in": "query",
            "name": "month",
            "schema": { "type": "string" },
            "example": "10",
            "required": true
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Get user tasks success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTasksResponse200"
                }
              }
            }
          },
          "401": {
            "description": "Get user tasks unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Tasks"],
        "summary": "Add task",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "requestBody": {
          "description": "Registration object",
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AddTaskRequest" }
            }
          }
        },

        "responses": {
          "201": {
            "description": "Add task success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddTaskResponse201"
                }
              }
            }
          },
          "400": {
            "description": "Add task validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddTaskResponse400"
                }
              }
            }
          },
          "401": {
            "description": "Add task unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{id}": {
      "patch": {
        "tags": ["Tasks"],
        "summary": "Update task by id",

        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "some1351BSON142format232id"
            },
            "description": "Task's id"
          }
        ],
        "security": [{ "Bearer": [] }],

        "requestBody": {
          "description": "Update task object",
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateTaskRequest" }
            }
          }
        },

        "responses": {
          "200": {
            "description": "Update task success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateTaskResponse200"
                }
              }
            }
          },
          "400": {
            "description": "Update task validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateTaskResponse400"
                }
              }
            }
          },
          "401": {
            "description": "Update task unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Update task not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response404"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Tasks"],
        "summary": "Delete task by id",

        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "some1351BSON142format232id"
            },
            "description": "Task's id"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Delete task success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTaskResponse200"
                }
              }
            }
          },
          "401": {
            "description": "Delete task unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Delete task not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response404"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password", "name"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "examplePass12345"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Joe Doe"
          }
        }
      },
      "RegistrationResponse201": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "User successfully registered"
          },
          "userData": {
            "type": "object",
            "properties": {
              "name": { "type": "string", "example": "Joe Doe" },
              "email": { "type": "string", "format": "email" }
            }
          },
          "token": {
            "type": "string",
            "example": "xxxxx.yyyyy.zzzzz"
          }
        }
      },
      "RegistrationResponse400": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Email, password or name is invalid"
          }
        }
      },
      "RegistrationResponse409": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Email already exists"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "examplePass12345"
          }
        }
      },
      "LoginResponse200": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "xxxxx.yyyyy.zzzzz"
          },
          "userData": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "some1351BSON142format232id"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Joe Doe"
              },
              "avatar": {
                "type": "string",
                "description": "User's avatar",
                "example": "https://example.com/avatar/user123.jpg"
              },
              "birthday": {
                "type": "string",
                "description": "User's birthday",
                "example": "03/01/1900"
              },
              "skype": {
                "type": "string",
                "description": "User's skype",
                "example": "https://join.skype.com/invitehandle"
              },
              "phone": {
                "type": "string",
                "description": "User's phone number",
                "example": "38 (097) 000 00 00"
              }
            }
          }
        }
      },
      "LoginResponse400": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Email or password is invalid"
          }
        }
      },
      "LoginResponse401": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Email or password is wrong"
          }
        }
      },
      "UnauthorizedResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Unauthorized"
          }
        }
      },
      "CurrentUserResponse200": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "some1351BSON142format232id"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Joe Doe"
          },
          "avatar": {
            "type": "string",
            "description": "User's avatar",
            "example": "https://example.com/avatar/user123.jpg"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "03/01/1900"
          },
          "skype": {
            "type": "string",
            "description": "User's skype",
            "example": "https://join.skype.com/invitehandle"
          },
          "phone": {
            "type": "string",
            "description": "User's phone number",
            "example": "38 (097) 000 00 00"
          }
        }
      },
      "EditUserRequest": {
        "type": "object",
        "properties": {
          "avatar": {
            "type": "string",
            "format": "binary"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Joe Doe"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "03/01/1900"
          },
          "skype": {
            "type": "string",
            "description": "User's skype",
            "example": "https://join.skype.com/invitehandle"
          },
          "phone": {
            "type": "string",
            "description": "User's phone number",
            "example": "38 (097) 000 00 00"
          }
        }
      },
      "EditUserResponse200": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "User info successfully updated"
          }
        }
      },
      "EditUserResponse400": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Some joi validation error"
          }
        }
      },
      "GetReviews200": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "example": "some1351BSON142format232id"
            },
            "review": {
              "type": "string",
              "example": "Really helps to plan the day and visualize tasks. Exactly what I was looking for. Huge thanks to the developers! "
            },
            "rating": {
              "type": "integer",
              "example": 5
            },
            "owner": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "some1351BSON142format232id"
                },
                "name": {
                  "type": "string",
                  "example": "Joe Doe"
                },
                "avatar": {
                  "type": "string",
                  "example": "https://example.com/avatar/user123.jpg"
                }
              }
            },
            "createdAt": {
              "type": "string",
              "example": "2023-10-19T12:43:17.550+00:00"
            },
            "updatedAt": {
              "type": "string",
              "example": "2023-10-19T12:43:17.550+00:00"
            }
          }
        }
      },
      "GetReviewResponse200": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "some1351BSON142format232id"
          },
          "name": { "type": "string", "example": "Joe Doe" },
          "review": {
            "type": "string",
            "example": "Really helps to plan the day and visualize tasks. Exactly what I was looking for. Huge thanks to the developers! "
          },
          "rating": {
            "type": "integer",
            "example": 5
          },
          "ownerId": {
            "type": "string",
            "example": "some1351BSON142format232id"
          }
        }
      },
      "AddReviewRequest": {
        "type": "object",
        "required": ["review", "rating"],
        "properties": {
          "review": {
            "type": "string",
            "example": "Really helps to plan the day and visualize tasks. Exactly what I was looking for. Huge thanks to the developers! "
          },
          "rating": {
            "type": "integer",
            "example": 5
          }
        }
      },
      "AddReviewResponse201": {
        "type": "object",
        "properties": {
          "result": {
            "type": "object",
            "properties": {
              "name": { "type": "string", "example": "Joe Doe" },
              "rating": { "type": "integer", "example": 5 },
              "review": {
                "type": "string",
                "example": "Really helps to plan the day and visualize tasks. Exactly what I was looking for. Huge thanks to the developers!"
              },
              "owner": {
                "type": "string",
                "example": "some1351BSON142format232id"
              },
              "_id": {
                "type": "string",
                "example": "some1351BSON142format232id"
              },
              "createdAt": {
                "type": "string",
                "example": "2023-10-19T12:43:17.550+00:00"
              },
              "updatedAt": {
                "type": "string",
                "example": "2023-10-19T12:43:17.550+00:00"
              }
            }
          },
          "message": {
            "type": "string",
            "example": "Review successfully added"
          }
        }
      },
      "AddReviewResponse400": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Name, review or rating is invalid"
          }
        }
      },
      "AddReviewResponse409": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "User already added review"
          }
        }
      },
      "UpdateReviewRequest": {
        "type": "object",
        "required": ["review", "rating"],
        "properties": {
          "review": {
            "type": "string",
            "example": "Really helps to plan the day and visualize tasks. Exactly what I was looking for. Huge thanks to the developers! "
          },
          "rating": {
            "type": "integer",
            "example": 5
          }
        }
      },
      "UpdateReviewResponse200": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Review successfully updated"
          }
        }
      },
      "DeleteReviewResponse200": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Review successfully deleted"
          }
        }
      },
      "Response404": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Not found"
          }
        }
      },
      "GetTasksResponse200": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "example": "some1351BSON142format232id"
            },
            "title": {
              "type": "string",
              "example": "Brainstorm ideas for new content or products."
            },
            "start": {
              "type": "string",
              "example": "09:00"
            },
            "end": {
              "type": "string",
              "example": "21:00"
            },
            "priority": {
              "type": "string",
              "example": "low"
            },
            "date": {
              "type": "string",
              "example": "2023-10-20"
            },
            "category": {
              "type": "string",
              "example": "to-do"
            },
            "ownerId": {
              "type": "string",
              "example": "some1351BSON142format232id"
            }
          }
        }
      },
      "AddTaskRequest": {
        "type": "object",
        "required": ["title", "start", "end", "priority", "date", "category"],
        "properties": {
          "title": {
            "type": "string",
            "example": "Brainstorm ideas for new content or products."
          },
          "start": {
            "type": "string",
            "example": "09:00"
          },
          "end": {
            "type": "string",
            "example": "21:00"
          },
          "priority": {
            "type": "string",
            "example": "low"
          },
          "date": {
            "type": "string",
            "example": "2023-10-20"
          },
          "category": {
            "type": "string",
            "example": "to-do"
          }
        }
      },
      "AddTaskResponse201": {
        "type": "object",
        "properties": {
          "message": { "type": "string", "example": "Task added successfully" },
          "result": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "example": "Brainstorm ideas for new content or products."
              },
              "start": { "type": "string", "example": "09:00" },
              "end": { "type": "string", "example": "21:00" },
              "priority": { "type": "string", "example": "low" },
              "date": { "type": "string", "example": "2023-10-20" },
              "category": { "type": "string", "example": "to-do" },
              "owner": {
                "type": "string",
                "example": "some1351BSON142format232id"
              },
              "_id": {
                "type": "string",
                "example": "some1351BSON142format232id"
              },
              "createdAt": {
                "type": "string",
                "example": "2023-10-20T13:58:47.820Z"
              },
              "updatedAt": {
                "type": "string",
                "example": "2023-10-20T13:58:47.820Z"
              }
            }
          }
        }
      },
      "AddTaskResponse400": {
        "type": "object",
        "properties": {
          "message": { "type": "string", "example": "Joi validation error" }
        }
      },
      "UpdateTaskRequest": {
        "type": "object",
        "required": true,
        "properties": {
          "title": {
            "type": "string",
            "example": "Brainstorm ideas for new content or products."
          },
          "start": {
            "type": "string",
            "example": "09:00"
          },
          "end": {
            "type": "string",
            "example": "21:00"
          },
          "priority": {
            "type": "string",
            "example": "low"
          },
          "date": {
            "type": "string",
            "example": "2023-10-20"
          },
          "category": {
            "type": "string",
            "example": "to-do"
          }
        }
      },
      "UpdateTaskResponse200": {
        "type": "object",
        "properties": {
          "updatedTask": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "example": "Updated title"
              },
              "start": { "type": "string", "example": "09:00" },
              "end": { "type": "string", "example": "21:00" },
              "priority": { "type": "string", "example": "low" },
              "date": { "type": "string", "example": "2023-10-20" },
              "category": { "type": "string", "example": "to-do" },
              "owner": {
                "type": "string",
                "example": "some1351BSON142format232id"
              },
              "_id": {
                "type": "string",
                "example": "some1351BSON142format232id"
              },
              "createdAt": {
                "type": "string",
                "example": "2023-10-20T13:58:47.820Z"
              },
              "updatedAt": {
                "type": "string",
                "example": "2023-10-20T13:58:47.820Z"
              }
            }
          },
          "message": {
            "type": "string",
            "example": "Task successfully updated"
          }
        }
      },
      "UpdateTaskResponse400": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Some Joi validation error"
          }
        }
      },
      "DeleteTaskResponse200": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Task successfully deleted"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": { "type": "http", "scheme": "bearer", "bearerFormat": "JWT" }
    }
  }
}
